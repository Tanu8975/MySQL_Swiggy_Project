-- Exploring Swiggy, which is India's largest food delivery platforms. Diving deep into Swiggy's data to get an inside look at the company's operations and understand how Swiggy is able to serve millions of customers across India.



USE swiggy_business_analysis;

SELECT * FROM items;
SELECT * FROM orders;

ALTER TABLE items
CHANGE COLUMN name item_name VARCHAR(255);

SELECT * FROM items;



-- Q1) How many distinct food items were ordered through Swiggy?
SELECT COUNT(DISTINCT item_name) AS Distinct_food_items FROM items;

-- The total 164 food items were ordered by this particular customer through Swiggy App.

-- Q2) What is the distribution of VEG and NON-VEG Items ordered through Swiggy App?
SELECT is_veg, COUNT(item_name) as items FROM items
GROUP BY is_veg;
-- Here 1 denotes that the item is veg and 0 denotes the non-veg item. It is observe that among the total food items ordered by this customer through Swiggy App 180 were VEG food items and 12 were NON-VEG food items.

-- Q3) What is the is_veg 2 in the food items ordered list?
SELECT * FROM items
WHERE is_veg = 2;
-- The is_veg = 2 item is Oreo Brownie. It is a kind of dessert that's why it didn't categorized into VEG or NON_VEG items.

-- Q4) How many distinct orders were placed through Swiggy App?
SELECT COUNT(DISTINCT order_id) as Unique_orders FROM orders;
-- The total of 95 orders were placed through Swiggy App.

-- Q5) Show the items containing chicken in their name.
SELECT * FROM items
WHERE item_name LIKE '%chicken%' ;

-- Q6) Find items names with Paratha.
SELECT * FROM items
WHERE item_name LIKE '%paratha%' ;
-- The frequency of paratha ordered is less as comapared to chicken.

-- Q7) What was the average number of items per item?
SELECT COUNT(item_name) / COUNT(DISTINCT order_id) AS Average_item_per_order FROM items;
-- On average per every order the 2 items were ordered through Swiggy App.

-- Q8) How many times each items were ordered?
SELECT item_name, COUNT(*) FROM items
GROUP BY item_name
ORDER BY COUNT(*) DESC;
-- From the above we can observe that the Classic Mac & Cheese were ordered 4 times by this particular customer followed by Gobi Manchurian, Paneer Butter Masala with Mattar Pulao, Paneer & corn Pasta and Cheese corn Wrap were ordered 3 times through Swiggy App. 

-- Q9) What are the different values of rain mode? 
SELECT DISTINCT rain_mode FROM orders;
-- There typically 3 rain mode in this customer order history denoted as 0, 2 and 5. 
 
 -- Q10) How many distinct restaurant have this customer ordered from?
 SELECT COUNT(DISTINCT restaurant_name) as Unique_restaurant FROM orders;
 -- This customer has ordered from 49 different restuarant. 
 
 -- Q11) Find the restaurant with highest orders placed?
 SELECT restaurant_name, count(*) AS Fav_Restaurant FROM orders
 GROUP BY restaurant_name
 ORDER BY Fav_Restaurant DESC;
 -- From the above we can observe that the maximum orders were placed from The Bowl Company with total of 12 orders followed by Mansukh's Sweets and Snacks with 6 orders and Food Track with 5 orders. 
 
 -- Q12) Find out the orders placed per month and year. 
 SELECT DATE_FORMAT(order_time, '%Y-%m') AS month_order, COUNT(*) AS Number_of_orders FROM orders
 GROUP BY month_order
 ORDER BY Number_of_orders DESC;
 -- This customer placed more orders in October, 2021 with 9 number of orders, followed by July, 2019 and August with 5 orders respectively. There are also few months were this customer ordered only one order per month. 
 
 -- Q13) When was the latest order placed by this customer through Swiggy App?
 SELECT MAX(order_time) AS Latest_order FROM orders;
 -- This customer made the latest order on 5th Feb, 2022 at 19:07 hr. 
 
 -- Q14) How much Revenue of Swiggy was generated per month through this customer?
 SELECT DATE_FORMAT(order_time, '%Y - %M') AS Revenue_month, SUM(order_total) AS Total_revenue FROM orders
 GROUP BY Revenue_month
 ORDER BY Total_revenue DESC;
 -- The highest revenue generated by this customer was in month of October, 2021 of total amount of 6263 Rs and the lowest revenue was generated in month of September, 2020 of total amount of 133 Rs. 
 
 -- Q15) On average, how much does a customer spend per order?
 SELECT SUM(order_total) / COUNT(DISTINCT order_id) AS Average_order_value
 FROM orders;
 -- On an average this customer spends 293 Rs per food item order through Swiggy App. 
 
 -- Q16) How much money was spent on food orders through Swiggy every year?
 SELECT DATE_FORMAT(order_time, '%Y') AS Revenue_year, SUM(order_total) AS Revenue FROM orders
 GROUP BY Revenue_year
 ORDER BY Revenue DESC;
-- The highest revenue was generated in the year 2021 with an amount of 11343 Rs and the lowest revenue was generated in the year 2017 with an amount of 474 Rs.
 
 -- Q17) Find out the year on year change in Revenue. 
 WITH FINAL AS ( 
      SELECT 
           DATE_FORMAT(order_time, '%Y') AS yearorder,
           SUM(order_total) AS revenue
	  FROM orders
      GROUP BY yearorder
)
SELECT 
    yearorder,
    revenue,
    LAG(revenue) OVER (ORDER BY yearorder) AS previousrevenue
FROM 
    FINAL;
    
-- Q18) Ranking the highest year in terms of the revenue generated.

  WITH FINAL AS ( 
      SELECT 
           DATE_FORMAT(order_time, '%Y') AS yearorder,
           SUM(order_total) AS revenue
	  FROM orders
      GROUP BY yearorder
)
SELECT 
    yearorder,
    revenue,
    RANK() OVER (ORDER BY revenue DESC) AS ranking
FROM 
    FINAL;
-- Ranking-wise, 2021 stands as the highest with the amount of revenue generated, followed by 2019 in second place and 2020 in third place. 

-- Q19) Find the Restaurant with highest revenue ranking.
 WITH FINAL AS ( 
      SELECT 
           restaurant_name,
           SUM(order_total) AS revenue
	  FROM orders
      GROUP BY restaurant_name
)
SELECT 
    restaurant_name,
    revenue,
    RANK() OVER (ORDER BY revenue DESC) AS ranking
FROM 
    FINAL
    ORDER BY revenue DESC;
-- Ranking-wise, The Bowl Company stand highest with the amount of revenue generated, followed by Mansukh's Sweets and Snacks in Second place and McDonald's in Third place. 

-- Q20) Fetch the revenue generated during the Rain-Mode.
SELECT rain_mode, SUM(order_total) FROM orders
GROUP BY rain_mode;
-- The revenue generated in rainy days were less as compared to the normal days.

-- Q21) What items were ordered in each order? 
SELECT a.item_name, a.is_veg, b.restaurant_name, b.order_id, b.order_time FROM items AS a
INNER JOIN orders AS b
ON a.order_id = b.order_id;
 
 -- Q22) What are the product combinations which customer usually likes to order together? 
 SELECT a.order_id, a.item_name, b.item_name as name2, CONCAT(a.item_name, '-', b.item_name) as combination
FROM items AS a
JOIN items AS b
ON a.order_id = b.order_id
WHERE a.item_name <> b.item_name
AND a.item_name < b.item_name;
 
 ------------------------------------------------- THE-END -----------------------------------------------------------------------